<html>
<head>
<title>Translation and Unicode
</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="STYLESHEET" href="../doc.css">
</head>
<BODY bgcolor="#71B559" LINK="#FFFFCC" VLINK="#FFFFCC" LEFTMARGIN="0" TOPMARGIN="0">
<table cellpadding="0" cellspacing="0">
<tr>
<td class="side">&nbsp;</td>
<td>
    <table class="header" cellpadding="0" cellspacing="0">
    <tr>
        <td>
            <a href="../../index.html"><img src="../images/karrigell_skeudenn.png" border="0"></a>
        </td>
        <td class="headertext">
            <td class="headertext1">
                <center>
                <font size="+2"><b>Karrigell Documentation</b></font>
                <p>
                <table width="70%" cellpadding="0" cellspacing="0"><tr>
                <td class="info" align="left"><strong>Version 2.3.5</strong></td>
                <td class="info" align="right">19 05 07</td>
                </tr></table>
                </center>
            </td>
            <td class="headertext2">
                <a class="header" href="../fr/internationalization.htm">Fran&ccedil;ais</a>
            </td>
        </td>
    </tr>
    </table>
</td>
</tr>
<tr><td class="menu" valign="top"><a class="menu" href="front.htm">
1. Introduction
</a><br><a class="menu" href="install.htm">
2. Installing Karrigell
</a><br><a class="menu" href="webserveroptions.htm">
3. The Web server
</a><br><a class="menu" href="configuration.htm">
4. Configuration options
</a><br><a class="menu" href="apache.htm">
5. Working with Apache, LightTPD or Xitami
</a><br><a class="menu" href="programming.htm">
6. Programming
</a><br><a class="menu" href="debugging.htm">
7. Debugging
</a><br><a class="menu" href="pythonscripts.htm">
8. Python scripts
</a><br><a class="menu" href="cgi.htm">
9. CGI scripts
</a><br><a class="menu" href="karrigellservices.htm">
10. Karrigell Services
</a><br><a class="menu" href="pythoninsidehtml.htm">
11. Python Inside HTML
</a><br><a class="menu" href="htmlinsidepython.htm">
12. HTML Inside Python
</a><br><a class="menu" href="htmltags.htm">
13. HTMLTags - generate HTML in Python
</a><br><a class="menu" href="include.htm">
14. Including documents
</a><br><a class="menu" href="sessions.htm">
15. Sessions
</a><br><a class="menu" href="authentication.htm">
16. Authentication
</a><br><span class="sel">
17. Translation and Unicode
</span><br><span class="sel">
&nbsp;&nbsp;<small>17.1 Translation</small></span><br><span class="sel">
&nbsp;&nbsp;<small>17.2 Unicode support</small></span><br><a class="menu" href="namespace.htm">
18. Summary of built-in names</a><br></td>
<td class="content">
<h1>17. Internationalization and Unicode</h1>
<p>As you'll have guessed by reading this documentation, I'm not from an 
English-speaking country (I'm French, and more precisely Breton - the name 
Karrigell is a Breton word). So I've included a program to facilitate 
internationalization of scripts
<h2>17.1 Translation</h2>
<p>In a script, every time you want a message translated into a given 
language, instead of writing it as a normal string with quotes, 
it's written using a function called _, this way :
<dl><dd><pre class="verbatim">
print _("Hello everybody")
</pre></dl>
<p>In Python Inside HTML (PIH) you can use the shortcut &lt;%_ &gt; :
<dl><dd><pre class="verbatim">
&lt;%_ "Hello everybody" %&gt;
</pre></dl>
<p>Karrigell provides a simple web interface to create and modify translations of 
strings. For security reasons, the script that manages translation is reserved to 
the administrator. An authentication script is run, relying on md5 digests stored 
in a file called <code>admin.ini</code>, which the administrator <b>must</b> set 
by running the script <code>k_password.py</code> in the directory <CODE>admin</CODE>
<p>With your browser, call the script <code>http://localhost/admin/internat.pih
</code>. It opens a directory browser with which you can access all the files 
which may contain strings to translate (that is, all the files with an extension 
<code>.py, .pyw, .pih, .hip</code>). When clicking on a file name, a page 
appears with all the strings to tranlate (the arguments of the <code>_()</code> 
function) and asks for a translation in all the langages currently chosen in 
the browser language preferences<sup><a href="#note1">(1)</a></sup>. If 
translations have already been made they appear in the form fields
<p>Fill in the fields and validate the form ; this creates or updates the 
translations
<p>
<img src="../images/internat.png" border=0>
<p>You can check the effect by calling the script you've just modified and 
changing the language order in the preferences
<p>Translation is held in a file which is common to all the files in the same 
directory. You can also edit the whole dictionary clicking on the first item 
in the script list
<p>
<h2>17.2 Unicode support</h2>
<h3>New in version 2.2.2</h3><i>mostly written by Radovan Garabik</i>
<p>Unicode is a normalized standard used to represent all the writing styles in 
the world. For each sign (a letter in any alphabet, an ideogram in an Asiatic 
language) Unicode defines a unique number, called a "code point". Since 
computers and networks can only manage bytes, a mapping between "code points" 
and one or several bytes must be defined ; these mappings are called "encodings"
<p>Because there are many different encodings, when a program has to print a 
sign (a greek letter, a math symbol, a Chinese sign) it must receive <b>two</b> 
pieces of information : the string representing the sign (a sequence of bytes) 
<b>and</b> the encoding used. If it receives only a string, the program can try 
to guess an encoding (this is what a web browser usually does) but with no 
guarantee of success
<p>Karrigell defines two parameters in the configuration file to handle Unicode :
<ul>
<li><CODE>encodeFormData</CODE> : if set to 1, Karrigell tries to transform form
data into Unicode strings, trying different encodings one after the other. More
precisely, if the received data only have ASCII characters, no conversion is made,
the string is kept as is ; otherwise several encodings are tried and the first one
that succeeds is used
<br>So, the form data available in QUERY are either bytestrings or Unicode strings
<br><CODE>encodeFormData</CODE> defaults to 0 : no Unicode conversion is made
<li><CODE>outputEncoding</CODE> : defines the encoding that the browser will use
to interprete the strings that it's asked to print. The default value is 
<CODE>ISO-8859-1</CODE>, an encoding used to represent the signs of western european
languages based on the latin alphabet. You can define another encoding by
setting <code>outputEncoding</code> in section <CODE>[Server]</CODE> of the 
configuration file to another value
<p>You can see examples in the demo/unicode directory : set outputEncoding to 
utf-8 to see the expected result
</ul>
<hr align="left" width="10%">
<a name="note1">(1) On Microsoft Internet Explorer the language preference is 
set by Tools/Internet Options/General/Languages ; accepted languages are 
chosen from a list and ordered by preference. On Firefox use 
Edition/Preferences/Languages
</body>
</html>
</td>
</tr></table>