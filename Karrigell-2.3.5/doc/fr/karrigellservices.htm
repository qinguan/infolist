<html>
<head>
<title>Services Karrigell
</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="STYLESHEET" href="../doc.css">
</head>
<BODY bgcolor="#71B559" LINK="#FFFFCC" VLINK="#FFFFCC" LEFTMARGIN="0" TOPMARGIN="0">
<table cellpadding="0" cellspacing="0">
<tr>
<td class="side">&nbsp;</td>
<td>
    <table class="header" cellpadding="0" cellspacing="0">
    <tr>
        <td>
            <a href="../../index.html"><img src="../images/karrigell_skeudenn.png" border="0"></a>
        </td>
        <td class="headertext">
            <td class="headertext1">
                <center>
                <font size="+2"><b>Karrigell Documentation</b></font>
                <p>
                <table width="70%" cellpadding="0" cellspacing="0"><tr>
                <td class="info" align="left"><strong>Version 2.3.5</strong></td>
                <td class="info" align="right">19 05 07</td>
                </tr></table>
                </center>
            </td>
            <td class="headertext2">
                <a class="header" href="../en/karrigellservices.htm">English</a>
            </td>
        </td>
    </tr>
    </table>
</td>
</tr>
<tr><td class="menu" valign="top"><a class="menu" href="front.htm">
1. Introduction
</a><br><a class="menu" href="install.htm">
2. Installation
</a><br><a class="menu" href="webserveroptions.htm">
3. Le serveur Web
</a><br><a class="menu" href="configuration.htm">
4. Options de configuration
</a><br><a class="menu" href="apache.htm">
5. Travailler avec Apache, LightTPD ou Xitami
</a><br><a class="menu" href="programming.htm">
6. Programmation
</a><br><a class="menu" href="debugging.htm">
7. Debogage
</a><br><a class="menu" href="pythonscripts.htm">
8. Scripts Python
</a><br><a class="menu" href="cgi.htm">
9. Scripts CGI
</a><br><span class="sel">
10. Services Karrigell
</span><br><span class="sel">
&nbsp;&nbsp;<small>10.1 Syntax</small></span><br><span class="sel">
&nbsp;&nbsp;<small>10.2 urls intelligentes</small></span><br><a class="menu" href="pythoninsidehtml.htm">
11. Python Inside HTML
</a><br><a class="menu" href="htmlinsidepython.htm">
12. HTML Inside Python
</a><br><a class="menu" href="htmltags.htm">
13. HTMLTags - génère du HTML en Python
</a><br><a class="menu" href="include.htm">
14. Inclure des documents
</a><br><a class="menu" href="sessions.htm">
15. Sessions
</a><br><a class="menu" href="authentication.htm">
16. Authentification
</a><br><a class="menu" href="internationalization.htm">
17. Traduction et Unicode
</a><br><a class="menu" href="namespace.htm">
18. Résumé des noms intégrés</a><br></td>
<td class="content">
<h1>10. Services Karrigell</h1>
<h2>10.1 Syntax</h2>
<p>Les "services Karrigell" sont des scripts Python qui peuvent gérer en même temps
plusieurs URL, ce qui permet de développer un service complet (plusieurs pages HTML
distinctes) en un seul script
<p>Pour cela, les fonctions d'un service Karrigell sont associées à une URL : la
fonction <code>foo()</code> du script <code>monScript.ks</code> est appelé par l'URL
<span class="url">dummy.ks/foo</span>
<p>Pour appeler <code>foo(arg1,arg2)</code> l'URL doit être de la forme
<span class="url">monScript.ks/foo?arg1=val1&arg2=val2</span> ou être appelée par un 
formulaire avec les champs <code>arg1</code> et <code>arg2</code>
<p>Si aucune fonction n'est spécifiée, Karrigell cherche une fonction appelée
<code>index()</code>, sans argument
<p>Notez que pour des raisons de sécurité et de lisibilité, seules les fonctions
explicitement définies dans le script ks et dont la définition commence à la 1ère 
colonne du code source peuvent être appelées
<p>Si vous avez besoin de fonctions internes au script mais que vous ne voulez pas
qu'on puisse les appeler par une url, faites-les commencer par un signe souligné (_)
<p>Pour "sauter" d'une fonction à l'autre, il suffit de spécifier le nom de la fonction
dans un lien ou une action de formulaire :
<p>
<dl><dd><pre class="verbatim">
def index():
   print '&lt;a href="foo?nom=bar"&gt;Aller vers foo&lt;/a&gt;'
def foo(nom):
   print '&lt;IMG SRC="../picture.jpg"&gt;'
   print nom
</pre></dl>
<p>Remarquez la première ligne de la fonction <code>foo()</code> : à cause des méthodes de
résolution des URL, l'URL relative des fichiers et des scripts qui se trouvent dans le
<b>même</b> répertoire qu'un script ks doit être préfixé par "../"
<p>Tout l'environnement HTTP, les champs de formulaires, les exceptions spécifiques, 
les fonctions pour l'authentification, la gestion de sessions, etc. sont les mêmes
que pour les scripts Python
<p>Voici un exemple de Service Karrigell simple :
<p>
<dl><dd><pre class="verbatim">
so = Session()
if not hasattr(so, 'x'):
    so.x = 0
def index():
    print "x = %s" %so.x
    print '&lt;br&gt;&lt;a href="increment"&gt;Incrémenter&lt;/a&gt;'
    print '&lt;br&gt;&lt;a href="decrement"&gt;Décrémenter&lt;/a&gt;'
    print '&lt;br&gt;&lt;a href="reset"&gt;Remise à zéro&lt;/a&gt;'
    
def increment():
    so.x = _private(so.x)
    raise HTTP_REDIRECTION,"index"
def decrement():
    so.x -= 1
    raise HTTP_REDIRECTION,"index"
def reset():
    so.x = 0
    raise HTTP_REDIRECTION,"index"
def _private(x):
    """Le nom de la fonction commence par _ : fonction interne, 
    ne peut pas être invoquée par une url"""
    return x+1
</pre>
</dl>
<h2>10.2 urls intelligentes</h2>
Dans certains cas il peut être utile d'accéder à des fonctions de services
Karrigell avec des urls qui précisent des paramètres additionnels. Par exemple,
l'url <CODE>htpp://path/service.ks/fonction/foo/bar?nom=martin</CODE> appelerait la fonction
avec 'foo' et 'bar' comme paramètres
<p>On peut les récupérer dans le script par un attribut de <CODE>THIS</CODE> 
appelé <CODE>subpath</CODE>. Dans l'exemle ci-dessus, il aurait pour valeur la
liste <CODE>['foo','bar']</CODE>
<p>
<dl><dd><pre class="verbatim">
def fonction(nom):
   print 'subpath ',THIS.subpath
   print nom
</pre>
</dl>
<p>Un problème avec ces "url intelligentes" est que s'il faut écrire un lien,
ou utiliser <CODE>Include()</CODE>, ou faire une redirection vers une url relativ, 
il faut donner la bonne url au navigateur, c'est-à-dire la faire précéder du bon
nombre de '../'
<p>Ce nombre est calculé d'après la longueur de l'attribut <CODE>subpath</CODE> : pour
écrire un lien dans la fonction ci-dessus il faut écrire ceci
<p>
<dl><dd><pre class="verbatim">
def fonction(nom):
   print 'subpath ',THIS.subpath
   print nom
   print '&lt;a href=%slogin&gt;Identifiez-vous&lt;/a&gt;' %('../'*len(THIS.subpath))
</pre>
</dl>
ou utiliser un raccourci, l'attribut de <CODE>THIS</CODE> appelé <CODE>up</CODE> :
<p>
<dl><dd><pre class="verbatim">
def fonction(nom):
   print 'subpath ',THIS.subpath
   print nom
   print '&lt;a href=%slogin&gt;Identifiez-vous&lt;/a&gt;' %THIS.up
</pre>
</dl>
</td>
</tr></table>