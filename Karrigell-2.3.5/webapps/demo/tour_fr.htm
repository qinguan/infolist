<HTML><HEAD><TITLE>Karrigell</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<LINK href="../doc/doc.css" rel=STYLESHEET>
</script>
</HEAD>
<a href="../index.html" target="_parent"><img src="../doc/images/karrigell_skeudenn.png" border="0"></a>
<h2>Un tour rapide d'exemples de mise en oeuvre de Karrigell</h2>
	<dl class="tour">
		<dt><a href="hello.py" target="exec">hello.py</a>
		<a href="../debugger/fileShow1.pih?name=demo/hello.py" target="source"><img src="view.gif" border="0"
		alt="Voir source"></a></dt>
		<dd>Le script Python qui affiche le message "Hello Karrigell !"</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="hello1.py" target="exec">hello1.py</a>
		<a href="../debugger/fileShow1.pih?name=demo/hello1.py" target="source"><img src="view.gif" border="0"
		text="See source"></a></dt>
		<dd>Le même, mais avec content-type = "text/plain"</dd>
	</dl>
	<dl class="tour">
		<dt><a href="test.pih" target="exec">test.pih</a>
		<a href="../debugger/fileShow1.pih?name=demo/test.pih" target="source"><img src="view.gif" border="0"
		alt="Voir source"></a></dt>
		<dd>Test de base de script Python Inside HTML, avec affichage des en-têtes HTTP, de l'espace
		de noms, la liste des modules disponibles dans cet espace de noms, un calcul de carrés</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="test.hip" target="exec">test.hip</a>
		<a href="../debugger/fileShow1.pih?name=demo/test.hip" target="source"><img src="view.gif" border="0"
		alt="Voir source"></a></dt>
		<dd>Test de base de script HTML Inside Python avec affichage des en-têtes HTTP, des cookies,
		quelques calculs</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="ksTest.ks" target="exec">ksTest.ks</a>
		<a href="../debugger/fileShow1.pih?name=demo/ksTest.ks" target="source"><img src="view.gif" border="0"
		alt="Voir source"></a></dt>
		<dd>Un "Service Karrigell" complet en un seul script</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="counterDemo.pih" target="exec">counterDemo.pih</a>
		<a href="../debugger/fileShow1.pih?name=demo/counterDemo.pih" target="source"><img src="view.gif" border="0"
		alt="Voir source"></a></dt>
		<dd>Compteur du nombre de visites sur une page</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="cheetahTest.py" target="exec">cheetahTest.py</a>
		<a href="../debugger/fileShow1.pih?name=demo/cheetahTest.py" target="source"><img src="view.gif" border="0"
		alt="Voir source"></a></dt>
		<dd>Pour ceux qui préfèrent les systèmes de templates, le moteur bien connu Cheetah
		est inclus dans le package. Ce script montre comment l'utiliser : créer un script
		Python pour définir les variables, puis utiliser Include() et passer les variables
		du script au fichier de template <code>cheetahTest.tmpl</code>
		<a href="../debugger/fileShow1.pih?name=demo/cheetahTest.tmpl" target="source">
		<img src="view.gif" border="0" alt="Voir source">
		</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="globalTest.py" target="exec">globalTest.py</a>
		<a href="../debugger/fileShow1.pih?name=demo/globalTest.py" target="source"><img src="view.gif" border="0"
		text="Voir source"></a></dt>
		<dd>Utilise un module "global", appelé <code>myScript</code>, disponible dans tous les scripts
		(ceci est spécifié dans le fichier de configuration)</dd>
	</dl>
	<dl class="tour">
		<dt><a href="myForm.htm" target="exec">myForm.htm</a>
		<a href="../debugger/fileShow1.pih?name=demo/myForm.htm" target="source"><img src="view.gif" border="0"
		alt="Voir source"></a></dt>
		<dd>Formulaire HTML envoyé au script Python <code>myScript.py</code><a href=
		"../debugger/fileShow1.pih?name=demo/myScript.py" target="source"><img src="view.gif" border="0" alt=
		"Voir source"></a>, qui affiche les valeurs saisies</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="fileUpload.html" target="exec">fileUpload.html</a>
		<a href="../debugger/fileShow1.pih?name=demo/fileUpload.html" target="source"><img src="view.gif" border="0"
		alt="See source"></a></dt>
		<dd>Formulaire HTML envoyé au script Python <code>fileUpload.py</code><a href=
		"../debugger/fileShow1.pih?name=demo/fileUpload.py" target="source"><img src="view.gif" border="0" alt=
		"See source"></a>, pour montrer comment traiter les téléchargements de fichiers</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="includeDemo.py" target="exec">includeDemo.py</a>
		<a href="../debugger/fileShow1.pih?name=demo/includeDemo.py" target="source"><img src="view.gif" border=
		"0" alt="Voir source"></a></dt>
		<dd>Script Python qui montre l'utilisation de la fonction Include(). Le script inclus
		est <code>footer.py</code>
		<a href="../debugger/fileShow1.pih?name=demo/footer.py" target="source">
		<img src="view.gif" border="0" alt="See source"></a> qui à son tour inclut
		<code>includedFooter.py</code>
		<a href="../debugger/fileShow1.pih?name=demo/includedFooter.py" target="source">
		<img src="view.gif" border="0" alt="See source"></a>. La variable <code>THIS
		</code> change pour chaque script</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="htmlTagsTemplateTest.py" target="exec">htmlTagsTemplateTest.py</a>
		<a href="../debugger/fileShow1.pih?name=demo/htmlTagsTemplateTest.py" target="source"><img src="view.gif" border=
		"0" alt="See source"></a></dt>
		<dd>HTMLTags est un module qui permet de générer du HTML à partir de code Python.
		Dans cet exemple je m'en sers dans un module de template, <code>htmlTagsTemplate.py</code>
		<a href="../debugger/fileShow1.pih?name=demo/htmlTagsTemplate.py" target="source">
		<img src="view.gif" border="0" alt="See source"></a><br>Ce module utilise les noms <code>
		clients</code> et <code>title</code>, ils sont fournis comme arguments mots-clés de la
		fonction Include()
		</dd>
	</dl>
	<dl class="tour">
		<dt><a href="authenticationTest.pih" target="exec">authenticationTest.pih</a>
		<a href="../debugger/fileShow1.pih?name=demo/authenticationTest.pih" target="source"><img src="view.gif"
		border="0" alt="Voir source"></a></dt>
		<dd>Montre la fonction d'authentification, avec une fonction de test simple ; les valeurs à
		saisir sont "holden" et "caulfield"</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="redirect.py" target="exec">redirect.py</a>
		<a href="../debugger/fileShow1.pih?name=demo/redirect.py" target="source"><img src="view.gif" border="0"
		alt="Voir source"></a></dt>
		<dd>Redirection vers une autre URL (en l'occurence, mon site sur les chansons bretonnes...)
		</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="scriptErrorTest.pih" target="exec">scriptErrorTest.pih</a>
		<a href="../debugger/fileShow1.pih?name=demo/scriptErrorTest.pih" target="source"><img src="view.gif"
		border="0" alt="Voir source"></a></dt>
		<dd>Un script avec une erreur volontaire, pour montrer comment Karrigell affiche les
		messages d'erreur. Le bouton "Debug" donne accès au débogueur, qui montre le code
		source du script et permet de voir l'état des variables au moment où l'erreur
		s'est produite. Voir aussi <a href="frame_errorTour.htm" target="_top">d'autres
		erreurs</a></dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="scriptEndTest.py" target="exec">scriptEndTest.py</a>
		<a href="../debugger/fileShow1.pih?name=demo/scriptEndTest.py" target="source"><img src="view.gif"
		border="0" alt="Voir source"></a></dt>
		<dd>Un script avec une exception SCRIPT_END qui permet d'interrompre le script avant une
		ligne qui provoque une erreur</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="tabsDemo.pih" target="exec">tabsDemo.pih</a>
		<a href="../debugger/fileShow1.pih?name=demo/tabsDemo.pih" target="source"><img src="view.gif" border=
		"0" alt="Voir source"></a></dt>
		<dd>Montre un menu avec des onglets horizontaux</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="sessionTestForm.htm" target="exec">sessionTestForm.htm</a>
		<a href="../debugger/fileShow1.pih?name=demo/sessionTestForm.htm" target="source"><img src="view.gif"
		border="0" alt="Voir source"></a></dt>
		<dd>Formulaire HTML dont les données sont conservées par le mécanisme de session. La
		validation des données provoque l'appel du script <code>sessionTestBegin.pih</code><a href=
		"../debugger/fileShow1.pih?name=demo/sessionTestBegin.pih" target="source"><img src="view.gif" border=
		"0" alt="Voir source"></a> qui initialise l'objet session à partir des champs du formulaire.
		Le script suivant, <code>sessionTestFollow.pih</code><a href=
		"../debugger/fileShow1.pih?name=demo/sessionTestFollow.pih" target="source"><img src="view.gif" border=
		"0" alt="Voir source"></a>montre que les données sont bien récupérées à travers cet objet
		</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="thisTest.pih" target="exec">thisTest.pih</a>
		<a href="../debugger/fileShow1.pih?name=demo/thisTest.pih" target="source"><img src="view.gif"
		border="0" alt="See source"></a></dt>
		<dd>Montre les attributs de l'objet <code>THIS</code>
		</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="requestHandlerTest.pih" target="exec">requestHandlerTest.pih</a>
		<a href="../debugger/fileShow1.pih?name=demo/requestHandlerTest.pih" target="source"><img src="view.gif"
		border="0" alt="See source"></a></dt>
		<dd>Montre les attributs de l'objet <code>REQUEST_HANDLER</code>
		</dd>
	</dl class="tour">
	<dl class="tour">
		<dt><a href="importTest.hip" target="exec">importTest.hip</a>
		<a href="../debugger/fileShow1.pih?name=demo/importTest.hip" target="source"><img src="view.gif" border="0" alt="See source"></a></dt>
		<dd>Ce script se contente d'en importer un autre, <code>importTest.py</code><a href="../debugger/fileShow1.pih?name=demo/importTest.py" target="source"><img src="view.gif" border="0" alt="See source"></a> et affiche une valeur issue de ce module importé. Si l'option <code>reload_modules</code> a été mise à 1 dans le fichier d'initialisation (<code>Karrigell.ini</code>), quand on modifie la valeur dans importTest.py (avec un éditeur de texte) alors si on recharge importTest.pih la valeur affichée change aussi. Si <code>reload_modules</code> est à 0, le changement n'a aucun effet
		<br>Ceci évite d'avoir à redémarrer le serveur à chaque fois qu'on modifie quelque chose dans un script importé
		</dd>
	</dl class="tour">

